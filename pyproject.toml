[build-system]
requires = ["scikit-build-core"]
build-backend = "scikit_build_core.build"

[project]
name = "sentry-crashpad-handler"
dynamic = ["version"]
authors = [{ name = "Vincent", email = "magicdroidx@gmail.com" }]
license = { file = "LICENSE" }
description = "Crashpad is an open-source multiplatform crash reporting system written in C++ by Google."
readme = "README.md"
classifiers = [
    "Programming Language :: C",
    "Programming Language :: C++",
    "Operating System :: OS Independent",
    "License :: OSI Approved :: MIT License",
    "Intended Audience :: Developers",
    "Topic :: Software Development :: Quality Assurance",
]

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.regex"
regex = '^(?P<value>\d+\.\d+\.\d+(\.[1-9]\d*)?)'
input = "crashpad_handler_version.txt"

[project.urls]
Documentation = "https://docs.sentry.io/platforms/native/configuration/backends/crashpad/"
Download = "https://github.com/getsentry/sentry-native/releases"
Source = "https://github.com/wu-vincent/sentry-crashpad-handler-wheel"

[project.scripts]
"crashpad_handler" = "sentry_crashpad_handler:crashpad_handler"

[tool.scikit-build]
wheel.packages = ["sentry_crashpad_handler"]
wheel.py-api = "py2.py3"
cmake.version = ">=3.16.0"
ninja.version = ">=1.10.0"
cmake.verbose = true
logging.level = "DEBUG"

[tool.cibuildwheel]
# Super-verbose output for debugging purpose
build-verbosity = 3
# Set CMAKE_GENERATOR env var which is respected by scikit-build-core to use Ninja on all platforms
environment = "CMAKE_GENERATOR=Ninja"

[[tool.cibuildwheel.overrides]]
select = "*-manylinux*"
before-all = "yum install -y libcurl-devel zlib-devel"

[[tool.cibuildwheel.overrides]]
select = "*-musllinux*"
before-all = "apk add curl-dev zlib-dev"